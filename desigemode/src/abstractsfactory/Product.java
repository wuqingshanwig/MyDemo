package abstractsfactory;

/**
 * 定义：提供一个创建一系列相关或相互依赖对象的接口，而无须指定它们具体的类；
 * 具体的工厂负责实现具体的产品实例。
 * 解决的问题：每个工厂只能创建一类产品（工厂方法模式）
 *
 * 抽象工厂模式与工厂方法模式最大的区别：抽象工厂中每个工厂可以创建多种类的产品；
 * 而工厂方法每个工厂只能创建一类
 *
 *“假设”有各类的自动售卖机（抽象工厂），可以出售各类食品（抽象产品族）。
 * 有饮料、零食（抽象产品），比如常见的零食售卖机（具体工厂），出售矿泉水与面包（具体产品）。
 *
 *
 * 抽象产品(食品)
 */
public abstract class Product {
    //产品介绍
    abstract void intro();
}
